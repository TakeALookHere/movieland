<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="getAllMoviesSQL" class="java.lang.String">
        <constructor-arg
                value="SELECT id, name_russian, name_native, released_date, plot, rating, price, picture_path FROM movie"/>
    </bean>

    <bean id="getAllGenresSQL" class="java.lang.String">
        <constructor-arg value="SELECT id, name FROM genre;"/>
    </bean>

    <bean id="getMoviesCountSQL" class="java.lang.String">
        <constructor-arg value="SELECT count(*) FROM movie;"/>
    </bean>

    <bean id="getThreeRandomMoviesSQL" class="java.lang.String">
        <constructor-arg
                value="SELECT id, name_russian, name_native, released_date, plot, rating, price, picture_path FROM movie WHERE id in(:ids);"/>
    </bean>

    <bean id="getByGenreSQL" class="java.lang.String">
        <constructor-arg
                value="SELECT id, name_russian, name_native, released_date, plot, rating, price, picture_path FROM movie WHERE id IN(SELECT DISTINCT movie_id FROM movie_genre WHERE genre_id = :genreId)"/>
    </bean>

    <bean id="getGenresByMovieIdSQL" class="java.lang.String">
        <constructor-arg
                value="select id, name from genre where id in(select distinct genre_id from movie_genre where movie_id = :movieId);"/>
    </bean>

    <bean id="getCountriesByMovieIdSQL" class="java.lang.String">
        <constructor-arg
                value="select id, name from country where id in(select distinct country_id from movie_country where movie_id = :movieId);"/>
    </bean>

    <bean id="getMovieByIdSQL" class="java.lang.String">
        <constructor-arg
                value="SELECT id, name_russian, name_native, released_date, plot, rating, price, picture_path FROM movie WHERE id = :movieId;"/>
    </bean>

    <bean id="getReviewsByMovieIdSQL" class="java.lang.String">
        <constructor-arg
                value="select id, movie_id, user_id, description from review where movie_id = :movieId;"/>
    </bean>

    <bean id="getUserByEmailAndPasswordSQL" class="java.lang.String">
        <constructor-arg
                value="select id, nickname, email from user where email = :email and password = md5(:password);"/>
    </bean>

    <bean id="addReviewSQL" class="java.lang.String">
        <constructor-arg
                value="insert into review (movie_id, user_id, description) values(:movieId, :userId, :description);"/>
    </bean>

    <bean id="updateReviewSQL" class="java.lang.String">
        <constructor-arg
                value="update review set user_id = :userId, description = :description where id = :reviewId;"/>
    </bean>

    <bean id="getUserRoleSQL" class="java.lang.String">
        <constructor-arg
                value="select name from role where id in(select role_id from user_role where user_id = :userId);"/>
    </bean>

    <bean id="getAllCountriesSQL" class="java.lang.String">
        <constructor-arg
                value="select id, name from country;"/>
    </bean>

    <bean id="addMovieSQL" class="java.lang.String">
        <constructor-arg
                value="insert into movie (name_russian, name_native, released_date, plot, rating, price, picture_path)
                        values (:nameRussian, :nameNative, :yearOfRelease, :description, :rating, :price, :picturePath)"/>
    </bean>

    <bean id="addMovieGenresSQL" class="java.lang.String">
        <constructor-arg
                value="insert into movie_genre (movie_id, genre_id)
                        values (:movieId, :genreId)"/>
    </bean>

    <bean id="addMovieCountriesSQL" class="java.lang.String">
        <constructor-arg
                value="insert into movie_country (movie_id, country_id) values (:movieId, :countryId)"/>
    </bean>

    <bean id="removeCountriesSQL" class="java.lang.String">
        <constructor-arg
                value="delete from movie_country where movie_id = :movieId;"/>
    </bean>

    <bean id="updateMovieSQL" class="java.lang.String">
        <constructor-arg
                value="update movie set name_russian = :nameRussian, name_native = :nameNative, released_date = :yearOfRelease,
                    plot = :description, rating = :rating, price = :price, picture_path = :picturePath where id = :movieId;"/>
    </bean>

    <bean id="removeGenresSQL" class="java.lang.String">
        <constructor-arg
                value="delete from movie_genre where movie_id = :movieId;"/>
    </bean>

    <bean id="addMovieRatingSQL" class="java.lang.String">
        <constructor-arg
                value="insert into movie_user_rating (movie_id, user_id, rating) values (:movieId, :userId, :rating);"/>
    </bean>

    <bean id="getAllRatingsSQL" class="java.lang.String">
        <constructor-arg
                value="select id movie_id, rating, votes from movie;"/>
    </bean>

    <bean id="getTotalRatingForEachMovieSQL" class="java.lang.String">
        <constructor-arg
                value="select a.movie_id, round(a.total_rating /votes_count, 1) rating, a.votes_count votes from((select movie_id, sum(rating) total_rating, count(*) votes_count from movie_user_rating group by movie_id) a);"/>
    </bean>

    <bean id="persistRatingsAndVotesSQL" class="java.lang.String">
        <constructor-arg
                value="update movie1 set rating = :rating, votes = :votes where id = :movieId;"/>
    </bean>
</beans>